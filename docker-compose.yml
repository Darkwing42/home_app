version: '3'

services:
  home_front:
    container_name: home_front
    hostname: home_front
    build:
      context: ../home_front
      dockerfile: Dockerfile
    command: npm run dev
    volumes: 
      - ../home_front:/app
    ports:
      - 8080:8080
    links:
      - home_app

  redis:
    image: redis:latest
    hostname: redis

  rabbit:
    image: rabbitmq:latest
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=home_user
      - RABBITMQ_DEFAULT_PASS=test2345

  home_app:
    restart: always
    hostname: home_app
    container_name: home_app
    build: .
    volumes:
      - .:/usr/src/home_app
    environment:
    - APP_SETTINGS=${APP_SETTINGS}
    - FLASK_APP=${FLASK_APP}
    - FLASK_ENV=${FLASK_ENV}
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_DB=${POSTGRES_DB}
    - SECRET_KEY=${SECRET_KEY}
    - REDIS_URL=${REDIS_URL}
    - BROKER_URL=${BROKER_URL}

    ports:
      - '5000:5000'
    links:
      - db
      - redis
      - rabbit

    depends_on:
      - db

  worker:
    restart: always
    build:
      context: ./tasks
      dockerfile: Dockerfile

    links:
      - rabbit
      - redis

    depends_on:
      - rabbit
      - home_app

  monitor:
    build:
      context: ./tasks
      dockerfile: Dockerfile
    ports:
      - '5555:5555'
    entrypoint: flower
    command:  -A tasks --port=5555 --broker=amqp://home_user:test2345@rabbit//
    depends_on:
      - rabbit
      - redis

  db:
    restart: always
    container_name: database
    hostname: database

    image: postgres:latest
    ports:
      - '5432:5432'
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
